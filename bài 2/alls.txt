#include <iostream>
#include <fstream>
using namespace std;
const int MAX_SIZE = 100;
// ham tinh so phan tu trong mang
int input(int a[], int MAX_SIZE)
{
    ifstream fileInput("file.txt");
    int n = 0;
    while (n < MAX_SIZE && fileInput >> a[n])
    {
        n++;
    }
    return n;
}
// thuat toan Binary Insertion Sort 
void insertionSort(int a[], int n)
{
    int  key, j;
    for (int i = 1; i < n; i++) {
        key = a[i];
        j = i - 1;
        while (j >= 0 && a[j] > key)
        {
            a[j + 1] = a[j];
            j--;
        }
        a[j + 1] = key;
    }
}
// Ham xuat mang 
void output(int c[], int p)
{
    for (int i = 0; i < p; i++) {
        cout << c[i] << " ";
    }
    cout << endl;
}
// Ham ghi mang vao file moi voi ten duoc chi dinh
void xuatfile(int c[], int p)
{
    ofstream myfile; 
    myfile.open("file2.txt"); 
    for (int i = 0; i < p; i++) {
        myfile << c[i] << " ";
    }
    myfile << endl;
    myfile.close(); 
}
int main() {
    int a[MAX_SIZE];
    int n = input(a, MAX_SIZE);
    cout << "mang doc vao:" << endl;
    output(a, n);
    insertionSort(a, n);
    cout << "mang sau khi sap xep:" << endl;
    output(a, n);
    xuatfile(a, n);
    return 0;
}






/*void timkiemtuyentinh(int a[], int n)
{
    int x = 4;
    cout << "gt tim kiem tai: " << endl;
    for (int i = 0; i < n; i++) {
        if (a[i]==x) {
            cout << i + 1 <<" ";
        }
    }
    cout << endl;
}*/
/*void timkiemnhiphan(int a[], int n)
{
    int x = 26;
    int left = 0, right = n-1, mid;
    while (left <= right)
    {
        mid = (left + right) / 2;
        if (x == a[mid]) {
            cout << "vi tri: " << mid + 1 <<endl;
            return;
        }
        if (x < a[mid]) {
            right = mid - 1;
        }
        else {
            left = mid + 1;
        }
    }
    cout << "khong tim thay"<<endl;
}*/
/*void interchangeSort(int a[], int n)
{
    for (int i = 0; i < n-1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (a[i] < a[j])
                swap(a[i], a[j]);
        }
    }
}*/

/*void selectionSort(int a[], int n)
{
    int min;
    for (int i = 0; i < n - 1; i++) {
        min = i;
        for (int j = i + 1; j < n; j++) {
            if (a[j] < a[min])
            {
                min = j;
            }
        }
        if (min != i)
        {
            swap(a[min], a[i]);
        }
    }
}*/

/*void bubbleSort(int a[], int n)
{
    for (int i = 0; i < n; i++) {
        for (int j = n - 1; j > i; j--)
            if (a[j] < a[j - 1])
                swap(a[j], a[j - 1]);
    }
}*/
/*int pivition(int a[], int left, int right)
{
    int pi = a[right];
    int vt = (left - 1);
    for (int j = left; j <= right - 1; j++) {
        if (a[j] < pi)
        {
            vt++;
            swap(&a[vt], &a[j]);
        }
    }
    swap(&a[vt + 1], &a[right]);
    return (vt + 1);
}
void quickSort(int a[], int left, int right)
{
    if (left < right)
    {
        int pivot = pivition(a, left, right);
        quickSort(a, left, pivot - 1);
        quickSort(a, pivot + 1, right);
    }
}

/*void tron(int a[], int n, int b[], int m, int c[], int& p)
{
    int i = 0, j = 0;
    p = 0;
    while (!(i >= n && j >= m))
    {
        if ((i < n && j < m && a[i] < b[j]) || j > m)
            c[p++] = a[i++];
        else
            c[p++] = b[j++];
    }
}*/
/*int input2(int b[], int MAX_SIZE){
    ifstream fileInput("Data2.txt");
    int m = 0;
    while (m < MAX_SIZE && fileInput >> b[m])
    {
        m++;
    }
    return m;
}*/

/*void swap(int* a, int* b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}*/


/*int m = input2(b, MAX_SIZE);
cout << m << endl;*/
/*timkiemtuyentinh(a, n);*/
/*timkiemnhiphan(a, n);*/
/*interchangeSort(a, n);*/
/*selectionSort(a, n);*/
/*insertionSort(a, n);*/
/*bubbleSort(a, n);*/
/*quickSort(a, 0, n-1);*/
/*tron(a, n, b, m, c, p);*/